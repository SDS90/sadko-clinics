Привет.

По поводу работы форм на сайте - пишу отдельно, поскольку форм достаточно много, некоторые из них уже изменились в процессе вёрстки.
От дизайнера есть файл forms.jpg - по нему и пойдём, разберём последовательно все формы.

Но для начала - в вёрстке сайта все формы во всех вариантах (запись на приём, запись по акции и т.д.) у нас выводятся на страницы всегда в конце html-страницы. Это связано с модульностью вёрстки, ну и с определённым удобством - все формы рядом. В реальности на страницы можно выводить только те формы, которые нужны. Например, формы отклика на вакансию нужны только на тех страницах, где есть вакансии и соответствующие кнопки. 

Все скрипты, отвечающие за формы я вынес в отдельный файл - forms.js. Его нужно подключить к каждой странице, лучше всего - сразу после global.js.

Ну, и заодно также отмечу, что некоторых форм (например, заявки на ДМС) сейчас на сайте нет, поскольку нет дизайна. Также ещё не свёрстаны ошибки - нужна будет валидация форм при отправке. Может быть, добавится ещё пара скриптов - ИМХО нужно дизейблить кнопку отправки, если не стоит галочка "Я принимаю условия обработки моих данных". Пока это не будет готово, наверно не надо делать отправку... если конечно Иван не скажет. Тогда придётся потом это внедрять.

Теперь всё-таки последовательно по формам.

1. Первым в файле с формами у нас идёт фильтр выбора врача. Его можно посмотреть, например, на странице команды - command.html. По клику на кнопку "По фамилии" у нас всплывает блок со списком. В списке у нас 4 колонки, но в принципе, их может быть и меньше - это регулируется классом у блока-обёртки col-3 (например, если выставить col-4, то будет 3 колонки и т.д. - всё, как у бутстрапа). По задумке дизайнера выбор по фамилии ведёт сразу на страницу выбранного врача, остальные кнопки нужны для уточнения выбора. Как я понимаю, по клику на кнопку "по специальности" у нас должно всплывать такое же точно окно, но со списком специальностей докторов. Но если мы выбираем по специальности, то остаёмся на этой же странице, только меняются списки врачей.

Сама кнопка фильтра технически представляет собой ссылку <a href="#"></a>. Если эта ссылка должна вызывать всплывающее окно, то она оборачивается в блок span с классом .filter-block-wrapper. Если нет - то остаётся просто ссылкой. Например, на странице образования education.html у нас есть похожий по дизайну фильтр обучающих программ, но там, очевидно, эти кнопки - просто кнопки, по клику на которые происходит обновление списка программ. Вероятнее всего, это должно делаться аяксом, без перезагрузки страницы.

2. Следующей по списку у нас идёт кнопка записи на приём к врачу. В простейшем виде эта форма вызывается по кнопке из шапки сайта, также есть вариант записи к конкретному доктору, например, на странице doctor.html. Эта форма представляет собой блок с id book-app-content. Кнопка, которая её вызывает должна иметь класс .book-toggle и два data-атрибута - data-book-info, в котором указывается заголовок формы (заголовок может быть любой - записаться к доктору такому-то, записаться на такую-то услугу - на той же странице доктора есть разные варианты, например, в блоке услуг); и data-book-answer, куда записывается ответ, который отображается в соответствующем окне. Сам скрипт вызова формы находится в файле forms.js, сейчас это 6 строка файла. При необходимости можно добавить для кнопки ещё какие-либо дата-атбируты, я думаю, ты можешь сделать это сам по аналогии, либо пиши мне (в конце укажу, куда писать)) Только если что-то будет добавляться,то думаю, что в вёрстке тоже хорошо было бы это поправить во избежание дальнейших конфликтов... Но ладно.

В самом блоке формы свёрстаны сразу два блока - start-form, собственно, сама форма записи, и answer-form - ответ на форму, который должен показываться вместо стартовой после отправки. В этом ответе может быть разный текст, в зависимости от того, куда записываемся - для этого и был нужен атрибут data-book-answer. Но в общем-то если отправка формы будет производиться аяксом, то в  answer-form можно выводить и текст, который будет получаться в ответ от сервера.

С этой формой вроде ничего не забыл, идём дальше.

2.2.1 У нас есть особый вариант формы записи - запись по акции, которая немного отличается как по дизайну, так и по структуре. Кнопки для такой записи у нас есть на разных страницах, обычно - на баннере. Сама форма лежит в блоке с id action-app-content. Её вызывает кнопка, или ссылка с классом .action-toggle, а скрипт вызова есть в том же файле forms.js чуть дальше - на строке 36. Технически вызов этой формы работает точно так же, только здесь помимо атрибутов data-book-info и data-book-answer добавился новый атрибут - data-book-about, где описываются условия акции. В вёрстке у меня получилось засунуть сюда html-код, но лучше, если это будет просто текст, как и везде. В остальном форма аналогична обычной форме записи.

2.2.2 Следующая форма, пожалуй, одна из самых сложных. Это форма записи на странице конкретной услуги - smile.html Здесь у нас есть сверху три кнопки - "Горящие часы", "Визит к врачу" и "Визит к ведущему специалисту". Одна из них, стандартный "Визит к врачу" должна быть помечена как активная - классом .active. Сами кнопки переключают списки с расценками - блоки с классами .cost-dl, куда вынесен список услуг. У этих переключателей есть два data-атрибута - data-dl, куда записывается класс блока, который показывает соответствующая кнопка и data-cost-type с названием варианта обслуживания.

Если мы нажмём на кнопку "Записаться на приём" в этой форме - у нас откроется форма записи. Здесь указано название услуги в заголовке, а также выбранный вариант обслуживания. Сама форма записи здесь стандартная, также свёрстано окно .answer-form, с ответом.

Более сложный вариант это формы - на странице prices.html "Цены и акции". Там у нас есть фильтр по стоимости услуг. Здесь внутри блока li списка услуг есть ссылка и скрытый блок, внутри которого - три списка с расценками. У ссылки есть три дата-атрибута: data-about-service - с описанием услуги, data-book-header - заголовок и data-question-header - заголовок формы вопроса. У меня в вёрстке это добавлено только для первых двух ссылок - "Консультация стоматолога" и "Панорамный снимок".
По клику на ссылку всплывает форма записи на услугу, похожая на ту, которую мы смотрели на странице smile.html. Скрипт вызова также приведён в файле forms.js, на строке 130.
Сама же форма лежит в блоке с id service-app-content.
Во всплывающем окне приводится список расценок с переключателем, а также две кнопки - "Записаться на приём" и "Задать вопрос". Первая открывает стандартную форму записи, также есть блок ответа, пока скрытый. Вторая вызывает ещё одно всплывающее окно (честно, по мне так это полная херня - один попап внутри другого - и вероятно в будущих вариантах данного сайта, это будет как-то по другому сделано), это стандартное окно вопроса. Про него чуть позже.

Вроде про эту форму всё.. Сам вообще понимаю, что это надо делать как-то по другому, но в этой версии остаётся так.

2.2.4 Раз уж затронули форму вопроса, рассмотрим её здесь же. Она есть не только на этой странице, но и например, на странице доктора doctor.html и однотипна с формой отзыва. Поскольку она открывается не в модальном окне, а привязана к конкретной кнопке на странице, то её блок лежит рядом с кнопкой. Если кнопок несколько - то соответственно, несколько и блоков с разными заголовками.
В самой форме просто текстовый блок и личные данные. answer-form с ответом тут тоже есть. Он немного отличается в зависимости от того, вопрос это, или отзыв.

2.2.3 На этой же странице "Цены и акции" prices.html у нас есть ещё один (точнее, три) варианта формы записи на услуги. Они чуть выше - это, собственно, формы записи по вариантам обслуживания. Они сделаны немного по другому. По клику на кнопку "Оставить заявку" у нас выезжает сбоку стандартная форма записи. Также есть и форма ответа.

Честно говоря, эту форму верстал не я (я только доводил до ума), поэтому скрипт управления находится в отдельном скрипте - bookTile.js

2.2.5 Далее по списку идёт форма записи на лекцию. Она есть например на странице education.html - на любом из блоков ещё не прошедшей лекции. Чтобы её открыть нужно кликнуть на кнопку с классом .course-toggle, а управляющей её открытием скрипт лежит в файле forms.js, на строке 66. id блока с формой - course-app-content.
Кнопка открытия формы имеет три дата-атрибута: data-book-info - с заголовком формы, data-book-about - с пояснениями (например, это может быть дата и время лекции) и data-book-answer - с ответом. Сама форма по сравнению с формой записи на приём немного упрощена, и как обычно, есть answer-form с ответом.

2.3 Форма общения с самым-самым руководством. Дизайнеры предлагают подчеркнуть значимость письма "на самый верх" тем, что подложка под модальное окно в этот раз белая, ну и форма немного другая, её id - manager-app-content, в forms.js за её вызов отвечает функция на строке 204.
В форме есть небольшой заголовок, пояснение, текстовый блок, личные данные и кнопка отправки.
Пример вызова такой формы есть на странице about.html. Её вызывает кнопка с классом manager-toggle. У кнопки есть дата-атрибуты data-modal-header - заголовок формы; data-modal-subheader - подзаголовок, выводится над текстовым блоком, пояснение к нему; data-modal-text - краткий текст, выводится после основного заголовка; data-modal-button - текст на кнопке отправки, поскольку зависит от того, что отправляем - вопрос, идею или жалобу; и data-modal-answer - текст ответа в .answer-block. В остальном всё вроде как стандартно.

2.4 Последний вариант формы - отклик на вакансию. Он есть только на двух страницах - vacancies.html и та же about.html. Её особенность - наличие кнопки отправки файла резюме. Форма находится в блоке с id vacancy-app-content, а в forms.js её вызов описывает функция на строке 95. answer-form тоже, как обычно, в наличии.
У кнопки вызова свой класс - vacancy-toggle, и два дата-атрибута: data-book-info - заголовок и data-book-answer - ответ.

На этом вроде всё.. напоминаю, что пока ещё не готовы блоки ошибок и возможно, будут ещё какие-то мелкие правки.

Если я что-то забыл, или будут вопросы - пиши либо в комментариях к задачам во wrike, либо прямо мне на email: smorodinov.denis@gmail.com

Надеюсь, это описание помогло немного облегчить жизнь :) Удачи!